{
  "scripts": {
    "syncpack": "syncpack",
    "syncpack:list-mismatches": "syncpack list-mismatches",
    "syncpack:fix-mismatches": "syncpack fix-mismatches",
    "syncpack:set-semver-ranges": "syncpack set-semver-ranges",
    "lerna:bootstrap": "lerna --no-ci bootstrap --hoist react --ignore @wallex/angular-accounts* --ignore @wallex/angular-admin* --ignore @wallex/angular-app* --ignore wallex-* --ignore @wallex/microservice-* --ignore @wallex/microservices-* --ignore @wallex/wallex-app-account",
    "lerna:bootstrap:ci": "lerna --ci --concurrency=10 bootstrap --ignore @wallex/angular-accounts* --ignore @wallex/angular-admin* --ignore @wallex/angular-app* --ignore wallex-* --ignore @wallex/microservice-* --ignore @wallex/microservices-*",
    "lerna:bootstrap:yarn": "lerna --no-ci bootstrap --npm-client=yarn  --ignore @wallex/angular-accounts* --ignore @wallex/angular-admin* --ignore @wallex/angular-app* --ignore wallex-* --ignore @wallex/microservice-* --ignore @wallex/microservices-* --ignore @wallex/wallex-app-account --ignore @wallex/wallex-angular-* --ignore @wallex/wallex-dealing-desk-ui --ignore @wallex/wallex-dealing-desk --ignore @wallex/wallex-app-psb",
    "lerna:clean": "lerna --no-ci clean",
    "lerna:install-all": "lerna --no-ci --ignore @wallex/angular-accounts* --ignore @wallex/angular-admin* --ignore @wallex/angular-app* --ignore wallex-* --ignore @wallex/microservice-* --ignore @wallex/microservices-* exec -- npm install",
    "lerna:update-schema": "lerna --no-ci run update-schema",
    "lerna:build-all": "lerna --no-ci run build    --ignore @wallex/angular-accounts* --ignore @wallex/angular-admin* --ignore @wallex/angular-app* --ignore wallex-* --ignore @wallex/microservice-* --ignore @wallex/microservice-* --ignore @wallex/wallex-app-account --ignore @wallex/wallex-angular-* --ignore @wallex/wallex-dealing-desk-ui  --ignore @wallex/wallex-dealing-desk --ignore @wallex/wallex-app-psb --ignore @wallex/reuters",
    "lerna:build-all:local": "lerna --no-ci run build --ignore wallex-*",
    "lerna:build-all:watch": "lerna run --parallel build:watch",
    "lerna:build-all-schema": "lerna --no-ci run update-schema",
    "lerna:build-all-relay": "lerna --no-ci run build:relay",
    "lerna:build-all-3": "lerna --no-ci run build:3",
    "lerna:test-all": "lerna --no-ci run test --stream --ignore @wallex/angular-* --ignore wallex-* --ignore @wallex/microservice-* --ignore @wallex/base --ignore @wallex/payment-base --ignore @wallex/settlement-base",
    "lerna:test-all-silent": "lerna --no-ci run test:silent --stream --ignore @wallex/angular-* --ignore wallex-* --ignore @wallex/microservice-* --ignore @wallex/base --ignore @wallex/payment-base --ignore @wallex/settlement-base",
    "lerna:test-all:sdk": "lerna --no-ci run test:sdk --stream --scope @wallex/sdk",
    "lerna:test-all:sdk-part-1": "lerna --no-ci run test:sdk --stream --scope @wallex/sdk",
    "lerna:test-all:sdk-part-2": "lerna --no-ci run test:sdk --stream --scope @wallex/sdk",
    "lerna:test-all-silent:sdk": "lerna --no-ci run test:sdk:silent --stream --scope @wallex/sdk",
    "lerna:test-all:base": "lerna --no-ci run test --stream --scope @wallex/base",
    "lerna:test-all-silent:base": "lerna --no-ci run test:silent --stream --scope @wallex/base",
    "lerna:test-all:base:manager": "lerna --no-ci run test:manager --stream --scope @wallex/base",
    "lerna:test-all-silent:base:manager": "lerna --no-ci run test:manager:silent --stream --scope @wallex/base",
    "lerna:test-all:base:manager-part-1": "lerna --no-ci run test:manager-part-1 --stream --scope @wallex/base",
    "lerna:test-all:base:manager-part-2": "lerna --no-ci run test:manager-part-2 --stream --scope @wallex/base",
    "lerna:test-all-silent:base:manager-part-1": "lerna --no-ci run test:manager:silent-part-1 --stream --scope @wallex/base",
    "lerna:test-all-silent:base:manager-part-2": "lerna --no-ci run test:manager:silent-part-2 --stream --scope @wallex/base",
    "lerna:test-all:base:runInBand": "lerna --no-ci run test:runInBand --stream --scope @wallex/base",
    "lerna:test-all:base:change": "lerna --no-ci run test:change --stream --scope @wallex/base",
    "lerna:test-all:base:manager:change": "lerna --no-ci run test:manager:change --stream --scope @wallex/base",
    "lerna:test-all:base:runInBand:change": "lerna --no-ci run test:runInBand:change --stream --scope @wallex/base",
    "lerna:test-all:settlement-base": "lerna --no-ci run test:runInBand:silent --stream --scope @wallex/settlement-base",
    "lerna:test-all-silent:settlement-base": "lerna --no-ci run test:runInBand:silent --stream --scope @wallex/settlement-base",
    "lerna:test-all:settlement-base:change": "lerna --no-ci run test:runInBand:change --stream --scope @wallex/settlement-base",
    "lerna:deploy": "lerna --no-ci run deploy --ignore @wallex/angular-accounts* --ignore @wallex/angular-admin* --ignore @wallex/angular-app* --ignore wallex-* --ignore @wallex/microservice-*",
    "lerna:deploy:angular:ninja": "lerna --no-ci run deploy:angular:ninja",
    "lerna:deploy:angular:rocks": "lerna --no-ci run deploy:angular:rocks",
    "lerna:deploy:1": "lerna --no-ci run deploy:1",
    "lerna:deploy:2": "lerna run deploy:2",
    "lerna:deploy:3": "lerna run deploy:3",
    "lerna:deploy:4": "lerna run deploy:4",
    "lerna:deploy:5": "lerna run deploy:5",
    "lerna:deploy:6": "lerna run deploy:6",
    "lerna:deploy:7": "lerna run deploy:7",
    "lerna:deploy:8": "lerna run deploy:8",
    "lerna:deploy:9": "lerna run deploy:9",
    "lerna:payment:dep-publish": "lerna run --parallel payment:dep-publish",
    "lerna:payment:dep-deploy": "lerna --no-ci bootstrap && lerna --no-ci run --parallel build && lerna run --parallel payment:dep-publish",
    "lerna:list": "lerna la",
    "lerna": "lerna",
    "prettier:check": "prettier --check \"packages/*/src/**/*.js\"",
    "prettier:check:debug": "prettier --debug-check \"packages/*/src/**/*.js\"",
    "prettier:write": "prettier --write \"packages/*/src/**/*.js\"",
    "codecov": "gulp merge-coverage-files && codecov --disable=gcov -f ./coverage/coverage-wallex.json",
    "merge-coverage-files": "gulp merge-coverage-files",
    "test-db:init": "node ./script/test-db-init.js",
    "test-db:check": "node ./script/test-db-check.js",
    "dummy-server": "node ./script/dummy-server.js",
    "unpublish": "gulp unpublish",
    "version-check": "gulp version-check",
    "version": "gulp version",
    "flow-typed": "flow-typed",
    "flow-coverage": "export NODE_OPTIONS=--max-old-space-size=8192 && flow-coverage-report",
    "flow": "flow",
    "check-max-flow-errors": "node ./script/check-flow-errors.js max-flow-errors=3000"
  },
  "flow-coverage-report": {
    "concurrentFiles": 1,
    "excludeGlob": [
      "**/node_modules/**",
      "**/__tests__/**",
      "**/__fixtures__/**"
    ],
    "includeGlob": [
      "packages/wallex-base/src/**/*.js",
      "packages/wallex-domain/src/**/*.js",
      "packages/wallex-util/src/**/*.js"
    ],
    "type": [
      "text",
      "html",
      "json"
    ]
  },
  "devDependencies": {
    "@babel/cli": "^7.6.2",
    "@babel/core": "^7.6.2",
    "@babel/preset-flow": "^7.0.0",
    "babel-eslint": "10.0.2",
    "codecov": "3.7.0",
    "eslint": "6.1.0",
    "eslint-plugin-flowtype": "4.2.0",
    "flow-bin": "^0.111.3",
    "flow-coverage-report": "^0.6.1",
    "grunt": "1.0.4",
    "gulp": "4.0.2",
    "gulp-babel": "8.0.0",
    "gulp-debug": "4.0.0",
    "gulp-exec": "3.0.2",
    "gulp-if": "2.0.2",
    "gulp-merge-json": "1.3.1",
    "gulp-replace": "1.0.0",
    "lerna": "^3.14.1",
    "mysql-import": "2.0.2",
    "mysql2": "1.6.5",
    "prettier": "1.17.1",
    "sequelize": "5.21.3",
    "syncpack": "^4.5.4",
    "yargs": "13.2.4"
  },
  "dependencies": {
    "jest": "^24.9.0",
    "flow-typed": "^2.6.1",
    "mime-types": "2.1.24"
  }
}
